# -*- coding: utf-8 -*-
"""house_price.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jzQTjqqZnb_ml9EMhZZYBM2gelS_xM_L
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import sklearn.datasets
from sklearn.model_selection import train_test_split
from xgboost import XGBRegressor
from sklearn import metrics

house_price=pd.read_csv('/content/boston.csv')

house_price.head()

house_price.describe()

print(house_price)

# Assuming the target variable is in a column named 'MEDV' (common in Boston housing dataset)
house_price['price'] = house_price['MEDV']
house_price.head()

house_price.shape
house_price.isnull().sum()

"""#correlation data

"""

correlation=house_price.corr()

plt.figure(figsize=(10,10))
sns.heatmap(correlation,cbar=True,square=True,fmt='.1f',annot=True,annot_kws={'size':8},cmap='Blues')

x=house_price.drop(['price'],axis=1)
y=house_price['price']
print(x)
print(y)

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=2)
print(x.shape,x_train.shape,x_test.shape)

"""#model training"""

model=XGBRegressor()

model.fit(x_train , y_train)

model_prediction=model.predict(x_train)

print(model_prediction)

"""r error
mean value eror
"""

score_1=metrics.r2_score(y_train,model_prediction)
score_2=metrics.mean_absolute_error(y_train,model_prediction)
print("R squared error:",score_1)
print("Mean absolute error:",score_2)

plt.scatter(y_train,model_prediction)
plt.xlabel("actual price")
plt.ylabel("predicted price")
plt.title("actual price vs predicted price")
plt.show()

model_predicte=model.predict(x_test)

score_1=metrics.r2_score(y_test,model_predicte)
score_2=metrics.mean_absolute_error(y_test,model_predicte)
print("R squared error:",score_1)
print("Mean absolute error:",score_2)

plt.scatter(y_test,model_predicte)
plt.xlabel("actual price")
plt.ylabel("predicted price")
plt.title("actual price vs predicted price")
plt.show()